name: Nightly Release and GH Pages Workflow

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Runs at midnight UTC every day

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
        with:
          submodules: true
          ref: 'develop'
          
      - name: Check for changes since last successful build
        id: check_tag
        run: |
          TAG_FOUND=$(git tag --contains HEAD | grep -E '.*-dev-nightly.*')
          if [ -n "$TAG_FOUND" ]; then
            echo "Skipping nightly build: current commit is already a nightly build: $TAG_FOUND"
            exit 78  # Neutral exit to stop workflow
          else
            echo "No nightly tag found on the current commit. Building new nightly."
          fi

      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: '3.10' # Specify the Python version.

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y libreoffice
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Make nightly
        run: make nightly

      - name: Read _VERSION file
        id: version
        run: echo "::set-output name=version::$(cat ./_VERSION)"
      
      - name: Update Release Tag in index.rst
        run: |
          sed -i "s|RELEASE_TAG_PLACEHOLDER|${{ steps.version.outputs.id }}|g" ./source/index.rst

      - name: Create and Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.id }}  # Uses the tag name
          name: Nightly Build ${{ steps.version.outputs.id }}
          draft: true
          prerelease: false
          files: |
            ./dist/docx/nightly-DENT-OIP.docx
            ./dist/pdf/nightly-DENT-OIP.pdf
            ./dist/nightly-codes.csv
            ./dist/nightly-views.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish HTML to gh-pages branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/html/
          destination_dir: nightly

      - name: Store the current commit SHA for future checks
        run: echo "$(git rev-parse HEAD)" > last-successful-commit.txt
  