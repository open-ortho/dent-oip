name: Nightly Build

on:
  push:
    branches:
      - develop

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: true
          ref: develop

      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: '3.10' # Specify the Python version.

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y libreoffice
          python -m pip install --upgrade pip
          pip install -r ./requirements.txt

      - name: Run Make nightly
        run: make nightly

      - name: Get NIGHTLY_VERSION from _VERSION
        id: version
        run: |
          VERSION_FILE="./source/_VERSION"
          if [ -f "$VERSION_FILE" ]; then
            echo "NIGHTLY_VERSION=$(cat $VERSION_FILE)" >> $GITHUB_ENV
            echo "NIGHTLY_VERSION=$(cat $VERSION_FILE)" >> $GITHUB_OUTPUT
          else
            echo "Cannot load NIGHTLY_VERSION from $VERSION_FILE"
            exit 1
          fi
      
      - name: Create and Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.NIGHTLY_VERSION }}  # Uses the tag name
          name: Nightly Build ${{ steps.version.outputs.NIGHTLY_VERSION }}
          draft: true
          prerelease: false
          files: |
            ./dist/docx/DENT-OIP.docx
            ./dist/pdf/DENT-OIP.pdf
            ./source/tables/codes.csv
            ./source/tables/views.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish HTML to gh-pages branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/html/
          destination_dir: nightly

      - name: Update Nightly Latest Tag
        run: |
          git tag -d nightly-latest || true  # Delete the local tag if it exists
          git push origin :refs/tags/nightly-latest || true  # Delete the remote tag if it exists
          git tag -a nightly-latest -m "Updated nightly-latest tag"
          git push origin nightly-latest

